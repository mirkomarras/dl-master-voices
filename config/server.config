# HPC Server Configuration

# Request Resources
srun --time=168:00:00 --ntasks-per-node=1 --gres=gpu:1 --mem=128000 --pty /bin/bash

# Project Setup
git clone https://github.com/mirkomarras/dl-master-voices.git
cd ./dl-master-voices/
module load python/intel/3.8.6
python -m virtualenv mvenv
source mvenv/bin/activate
pip install -r requirements.txt
unzip /archive/m/mm11333/data_original.zip
mkdir jobs

# Give rwx permission to external data
setfacl -m u:mlc761:rwX /beegfs/mm11333/
setfacl -m u:pk91:rwX /beegfs/mm11333/
setfacl -m u:mlc761:rwX /beegfs/mm11333/data/
setfacl -m u:pk91:rwX /beegfs/mm11333/data/
setfacl -Rm u:mlc761:rwX /beegfs/mm11333/data/voxceleb1
setfacl -Rm u:mlc761:rwX /beegfs/mm11333/data/voxceleb2
setfacl -Rm u:pk91:rwX /beegfs/mm11333/data/voxceleb1
setfacl -Rm u:pk91:rwX /beegfs/mm11333/data/voxceleb2
getfacl /beegfs/mm11333/data/voxceleb1
getfacl /beegfs/mm11333/data/voxceleb2

setfacl -m u:mlc761:rwx /beegfs/mm11333/data/data_20200706.zip
setfacl -m u:pk91:rwx /beegfs/mm11333/data/data_20200706.zip
getfacl /beegfs/mm11333/data/data_20200706.zip

# Create symlinks to voxceleb dataset
ln -s /beegfs/mm11333/data/voxceleb1 ./data/
ln -s /beegfs/mm11333/data/voxceleb2 ./data/

# Prepare for running scripts
srun --time=168:00:00 --ntasks-per-node=1 --gres=gpu:1 --mem=8000 --pty /bin/bash
cd /home/mm11333/dl-master-voices/
source mvenv/bin/activate
module load ffmpeg/4.2.4
module load libsndfile/intel/1.0.31
module load cuda/10.0.130
module load cudnn/10.0v7.6.2.24

# Port forwarding from your laptop to the server for notebook
sbatch ./notebooks/run_jupyterlab_cpu.sbatch
ssh -L 9869:localhost:9869 mm11333@greene.hpc.nyu.edu
srun --mem=32GB -t120:00:00 --cpus-per-task=1 --gres=gpu:rtx8000:1 --pty /bin/bash

# Master voice test
srun --mem=64GB -t120:00:00 --cpus-per-task=1 --pty /bin/bash
cd /home/mm11333/dl-master-voices/
singularity exec --nv --overlay ../overlay-mv-5GB-200K.ext3:ro /scratch/work/public/singularity/cuda11.0-cudnn8-devel-ubuntu18.04.sif /bin/bash
source /ext3/env.sh
export PYTHONPATH=$PYTHONPATH:/home/mm11333/dl-master-voices


python3 routines/mv/test.py --net "thin_resnet/v000" --mv_set "resnet34_v000_pgd_spec_f/v000/sv,resnet34_v000_pgd_spec_f/v000/mv/,resnet50_v000_pgd_spec_f/v000/sv/,resnet50_v000_pgd_spec_f/v000/mv/,resnet50_v000_pgd_spec_m/v000/sv/,resnet50_v000_pgd_spec_m/v000/mv/,thin_resnet_v000_pgd_spec_f/v000/sv/,thin_resnet_v000_pgd_spec_f/v000/mv/,thin_resnet_v000_pgd_spec_m/v000/sv/,thin_resnet_v000_pgd_spec_m/v000/mv/,vggvox_v000_pgd_spec_f/v000/sv/,vggvox_v000_pgd_spec_f/v000/mv/,vggvox_v000_pgd_spec_m/v000/sv/,vggvox_v000_pgd_spec_m/v000/mv/,vggvox_v000_pgd_wave_f/v000/sv/,vggvox_v000_pgd_wave_f/v000/mv/,vggvox_v000_pgd_wave_m/v000/sv/,vggvox_v000_pgd_wave_m/v000/mv/" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"


python3 routines/mv/generate_populations.py -p "dev-test" -s "train/100/20,test/100/10" --dirname "/scratch/mm11333/voxceleb2/dev"

python3 routines/mv/test.py --net "vggvox/v001" --mv_set "vggvox_v000_pgd_spec_f/v000/sv,vggvox_v000_pgd_spec_f/v000/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "vggvox/v001" --mv_set "vggvox_v000_pgd_spec_f/v000/sv,vggvox_v000_pgd_spec_f/v000/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"

python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 1 --learning_rate 10
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 1 --learning_rate 1
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 1 --learning_rate 0.1
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 5 --learning_rate 10
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 5 --learning_rate 1
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 5 --learning_rate 0.1
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 10 --learning_rate 10
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 10 --learning_rate 1
python3 routines/mv/optimize.py --netv resnet34/v000 --seed ./data/vs_mv_seed/female --audio_dir data/voxceleb2/dev --gender female --gradient normed --train_pop data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv --test_pop data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv --batch 8 --attack pgd@spec --n_epochs 10 --learning_rate 0.1


Check transferability for same model:
./data/vs_mv_data/vggvox_v000_pgd_spec_f/v000/mv/mv_train_population_interspeech_1000u_50s-vggvox_v001-avg-far1.npz
Check old mv:
./data/vs_mv_data/vggvox-v000_real_f-f/v000/mv/mv_train_population_interspeech_1000u_50s-vggvox_v000-avg-far1.npz


srun --mem=64GB -t120:00:00 --cpus-per-task=1 --pty /bin/bash
cd /home/mm11333/dl-master-voices/
singularity exec --nv --overlay ../overlay-mv-5GB-200K.ext3:ro /scratch/work/public/singularity/cuda11.0-cudnn8-devel-ubuntu18.04.sif /bin/bash
source /ext3/env.sh
export PYTHONPATH=$PYTHONPATH:/home/mm11333/dl-master-voices



python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v004/sv,vggvox_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v004/sv,vggvox_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v005/sv,vggvox_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v005/sv,vggvox_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v006/sv,vggvox_v000_pgd_spec_f/v006/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v006/sv,vggvox_v000_pgd_spec_f/v006/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v007/sv,vggvox_v000_pgd_spec_f/v007/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v007/sv,vggvox_v000_pgd_spec_f/v007/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v008/sv,vggvox_v000_pgd_spec_f/v008/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "vggvox_v000_pgd_spec_f/v008/sv,vggvox_v000_pgd_spec_f/v008/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"

python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v003/sv,resnet50_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v003/sv,resnet50_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v004/sv,resnet50_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v004/sv,resnet50_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v005/sv,resnet50_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v005/sv,resnet50_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v006/sv,resnet50_v000_pgd_spec_f/v006/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet50_v000_pgd_spec_f/v006/sv,resnet50_v000_pgd_spec_f/v006/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"

python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v002/sv,thin_resnet_v000_pgd_spec_f/v002/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v002/sv,thin_resnet_v000_pgd_spec_f/v002/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v003/sv,thin_resnet_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v003/sv,thin_resnet_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v004/sv,thin_resnet_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v004/sv,thin_resnet_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v005/sv,thin_resnet_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "thin_resnet_v000_pgd_spec_f/v005/sv,thin_resnet_v000_pgd_spec_f/v005/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"

python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v002/sv,resnet34_v000_pgd_spec_f/v002/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v002/sv,resnet34_v000_pgd_spec_f/v002/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v003/sv,resnet34_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v003/sv,resnet34_v000_pgd_spec_f/v003/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v004/sv,resnet34_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_test_population_interspeech_1000u_10s.csv"
python3 routines/mv/test.py --net "resnet34/v000" --mv_set "resnet34_v000_pgd_spec_f/v004/sv,resnet34_v000_pgd_spec_f/v004/mv" --pop "data/vs_mv_pairs/mv_train_population_interspeech_1000u_50s.csv"




# virtualenv OK
# use gpu, cuda OK
# audio_folder_path in population files
# adjust test, dataset, optimize
# how to run notebooks

ln -s /scratch/mm11333/voxceleb2 ./data/
ln -s /scratch/mm11333/vs_mv_seed ./data/
ln -s /scratch/mm11333/vs_mv_data ./data/
ln -s /scratch/mm11333/vs_mv_models ./data/
ln -s /scratch/mm11333/vs_mv_pairs ./data/

setfacl -Rm u:mm11333:rwX /scratch/mm11333/vs_mv_data